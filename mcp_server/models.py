# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-29T08:41:34+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Any, Dict, List, Optional
from uuid import UUID

from pydantic import BaseModel, Field, RootModel


class AddNewCollaboratorRequest(BaseModel):
    collaborator_type: Optional[str] = None
    user_email: Optional[str] = None
    user_id: Optional[UUID] = None


class BaseModelModel(BaseModel):
    created_at: Optional[datetime] = None
    created_by: Optional[UUID] = None
    id: Optional[UUID] = None
    updated_at: Optional[datetime] = None
    updated_by: Optional[UUID] = None


class CachePostRequest(BaseModel):
    current_user_id: Optional[UUID] = None
    nonce: Optional[UUID] = None
    subdocument: Optional[str] = None


class CollaboratorBulkUpdateRequest(BaseModel):
    active: Optional[bool] = None
    lead_id: Optional[int] = None
    user_id: Optional[UUID] = None


class CreateSessionRequest(BaseModel):
    collaboratorUserId: Optional[UUID] = None
    host: Optional[str] = None


class Event(BaseModelModel):
    attributes: Optional[str] = None
    chat_prompt: Optional[str] = None
    conversation_id: Optional[str] = None
    dom_selectors: Optional[str] = None
    is_chat_hidden: Optional[bool] = None
    is_notify_enabled: Optional[bool] = None
    name: Optional[str] = None


class FileUpload(BaseModel):
    content_length: Optional[int] = None
    file: Optional[str] = None
    file_name: Optional[str] = None
    mimetype: Optional[str] = None


class Action(Enum):
    create = 'create'
    fire = 'fire'
    change = 'change'
    delete = 'delete'


class ManageEvent(BaseModel):
    action: Optional[Action] = None
    action_params: Optional[Dict[str, Any]] = None
    name: Optional[str] = None


class Message(BaseModel):
    body: Optional[str] = None
    id: Optional[str] = None
    remote: Optional[bool] = None
    timestamp: Optional[datetime] = None
    userId: Optional[UUID] = None
    userName: Optional[str] = None


class ModifyInactiveCollaborator(BaseModel):
    action: Optional[str] = None
    lead_id: Optional[int] = None
    user_id: Optional[UUID] = None


class OoxmlDocument(BaseModelModel):
    delete_target_on_story_delete: Optional[bool] = None
    ooxml_automation_id: Optional[UUID] = None
    story_id: Optional[UUID] = None


class Outline(BaseModel):
    outline: Optional[str] = None


class PermissionType(BaseModelModel):
    can_add_collaborators: Optional[bool] = None
    can_delete: Optional[bool] = None
    can_edit: Optional[bool] = None
    can_view: Optional[bool] = None
    name: Optional[str] = None


class ProblemDetail(BaseModel):
    detail: Optional[str] = None
    status: Optional[int] = None
    title: Optional[str] = None
    type: Optional[str] = None


class Status(BaseModel):
    status: Optional[str] = None


class StoryCollaborator(BaseModelModel):
    active: Optional[bool] = None
    email: Optional[str] = None
    lead_id: Optional[int] = None
    name: Optional[str] = None
    permission_type: Optional[PermissionType] = None
    permission_type_id: Optional[UUID] = None
    story_id: Optional[UUID] = None
    user_id: Optional[UUID] = None


class StoryOutlineHistory(BaseModelModel):
    collaborator_user_id: Optional[UUID] = None
    outline: Optional[str] = None
    revision_number: Optional[int] = None
    story_id: Optional[UUID] = None


class View(BaseModelModel):
    active_msecs: Optional[int] = None
    additional: Optional[str] = None
    end_time: Optional[datetime] = None
    page_number: Optional[int] = None
    session_id: Optional[UUID] = None
    start_time: Optional[datetime] = None
    total_msecs: Optional[int] = None


class CollaboratorsPostResponse(RootModel[List[PermissionType]]):
    root: List[PermissionType] = Field(..., title='List of Permission Types')


class EnvironmentGetResponse(BaseModel):
    pass


class FilePostRequest(BaseModel):
    file: Optional[List[bytes]] = None


class PermissionTypesGetResponse(RootModel[List[PermissionType]]):
    root: List[PermissionType] = Field(..., title='List of Permission Types')


class SessionsSessionIdViewsGetResponse(RootModel[List[View]]):
    root: List[View]


class SessionsSessionIdViewsPostRequest(BaseModel):
    activeMSecs: Optional[int] = None
    additional: Optional[str] = None
    endTime: datetime
    pageNumber: int
    startTime: datetime


class FieldIdCollaboratorsGetResponse(RootModel[List[StoryCollaborator]]):
    root: List[StoryCollaborator]


class FieldIdEventsGetResponse(RootModel[List[Event]]):
    root: List[Event]


class FieldIdEventsPostResponse(BaseModel):
    pass


class FieldIdFilePostRequest(BaseModel):
    file: Optional[List[bytes]] = None


class FieldIdMessagesGetResponse(RootModel[List[Message]]):
    root: List[Message]


class Session(BaseModelModel):
    collaborator: Optional[StoryCollaborator] = None
    collaborator_id: Optional[UUID] = None
    host: Optional[str] = None
    outline_revision: Optional[int] = None
    views: Optional[List[View]] = None


class Story(BaseModelModel):
    collaborators: Optional[List[StoryCollaborator]] = None
    is_public: Optional[bool] = None
    ooxml_documents: Optional[List[OoxmlDocument]] = None
    outline: Optional[str] = None
    outline_history: Optional[List[StoryOutlineHistory]] = None
    revision: Optional[int] = None
    title: Optional[str] = None


class FieldDatamodelCodeGeneratorRootSpecialGetResponse(RootModel[List[Story]]):
    root: List[Story]


class FieldIdSessionsGetResponse(RootModel[List[Session]]):
    root: List[Session]
